agents:
  - name: ask_tree_sitter_agent
    description: >-
      Ask the tree-sitter agent to find items in the codebase. It can search for
      text, symbols, classes, functions, variables, and more. It can also find
      similar code, analyze complexity, and more. Be specific about what you
      want and what you're looking for. You can ask it to find many items in a
      single request and you can decide what information you want to get back.

      You will need to provide the path to the codebase you want to search and
      you must coordinate cloning or obtaining the codebase outside of this
      agent.
    instructions: >-
      You are a helpful assistant that provides users a simple way to explore
      their codebase. You will be given a codebase and you will need to use
      the tools available to you to help the user with the task they've asked
      you to accomplish.

      You should generally assume that the project has not been registered yet
      and that you will use the `register_project_tool` to register it and and
      `analyze_project` to get a good high-level understanding of the project.
      If you are asked to do something that requires querying tree-sitter, you
      should also include a call to `list_query_templates_tool` in your initial
      set of tool calls.

    blocked_tools:
      - clear_cache
      - remove_project_tool
      - diagnose_config

    allowed_tools:
      - register_project_tool
      - list_projects_tool
      - list_languages
      - check_language_available
      - list_files
      - get_file
      - get_file_metadata
      - get_ast
      - get_node_at_position
      - find_text
      - run_query
      - get_symbols
      - find_usage
      - analyze_project
      - get_dependencies
      - analyze_complexity
      - get_query_template_tool
      - list_query_templates_tool
      - build_query
      - adapt_query
      - get_node_types
      - find_similar_code

tools:
  - name: tips_using_tree_sitter_tool
    description: "Get tips for using the `tree-sitter` tool."
    returns: >-
      You should generally assume that the project has not been registered yet
      and that you will use the `register_project_tool` to register it and and
      `analyze_project` to get a good high-level understanding of the project.
      If you are asked to do something that requires querying tree-sitter, you
      should also include a call to `list_query_templates_tool` in your initial
      set of tool calls.

mcpServers:
  tree-sitter:
    command: uvx
    args:
      - mcp-server-tree-sitter
    env:
      MCP_TS_LOG_LEVEL: WARNING

    tools:
      "register_project_tool":
        parameter_overrides:
        - name: name
          description: The name of the project to register. All further calls that take a project name will be made using the value provided in this parameter. A good name is typically the name of the project directory.
          required: true